// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcWeb.Data;

#nullable disable

namespace MvcWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MvcWeb.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("MvcWeb.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("cart_items");
                });

            modelBuilder.Entity("MvcWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Various electronic gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Home appliances and kitchenware",
                            Name = "Home and Kitchen"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fashion and beauty products",
                            Name = "Fashion and Beauty"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Instruments for making music",
                            Name = "Musical Instruments"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Art and craft supplies",
                            Name = "Art and Crafts"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Products for babies and toddlers",
                            Name = "Baby and Toddler"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Bedding and bath essentials",
                            Name = "Bed and Bath"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Home decor and furniture",
                            Name = "Decor and Furniture"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Health and beauty products",
                            Name = "Health and Beauty"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Garden tools and supplies",
                            Name = "Home and Garden"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Jewellery and watches",
                            Name = "Jewellery and Watches"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Luggage and travel accessories",
                            Name = "Luggage and Travel"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Office supplies and stationery",
                            Name = "Office and Stationery"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Products for pets",
                            Name = "Pet Products"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Sports and outdoor equipment",
                            Name = "Sports and Outdoor"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Tools for DIY projects",
                            Name = "Tools and DIY"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Toys and games for children",
                            Name = "Toys and Games"
                        });
                });

            modelBuilder.Entity("MvcWeb.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("MvcWeb.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("order_items");
                });

            modelBuilder.Entity("MvcWeb.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("MvcWeb.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("OnSale")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sku")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Samsung",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A sleek smartphone with a powerful processor.",
                            DiscountedPrice = 4999m,
                            ImageUrl = "samsung_a15_blue.jpg",
                            IsFeatured = false,
                            Name = "A15 Blue",
                            OnSale = true,
                            Price = 5999m,
                            ReleaseDate = new DateOnly(2024, 1, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Dell",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A high-performance laptop with a stunning display.",
                            DiscountedPrice = 18999m,
                            ImageUrl = "dell_xps_15.jpg",
                            IsFeatured = false,
                            Name = "XPS 15",
                            OnSale = true,
                            Price = 21999m,
                            ReleaseDate = new DateOnly(2024, 2, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Sony",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Noise-cancelling wireless headphones.",
                            DiscountedPrice = 3499m,
                            ImageUrl = "sony_wh_1000xm4.jpg",
                            IsFeatured = false,
                            Name = "WH-1000XM4",
                            OnSale = true,
                            Price = 3999m,
                            ReleaseDate = new DateOnly(2024, 3, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Apple",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A versatile tablet with a powerful A14 chip.",
                            DiscountedPrice = 8999m,
                            ImageUrl = "ipad_air.jpg",
                            IsFeatured = false,
                            Name = "iPad Air",
                            OnSale = true,
                            Price = 9999m,
                            ReleaseDate = new DateOnly(2024, 4, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Canon",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A full-frame mirrorless camera for professional photography.",
                            DiscountedPrice = 31999m,
                            ImageUrl = "canon_eos_r6.jpg",
                            IsFeatured = false,
                            Name = "EOS R6",
                            OnSale = true,
                            Price = 36999m,
                            ReleaseDate = new DateOnly(2024, 5, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Philips",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A healthy way to fry food with little to no oil.",
                            DiscountedPrice = 2299m,
                            ImageUrl = "philips_air_fryer.jpg",
                            IsFeatured = false,
                            Name = "Air Fryer",
                            OnSale = true,
                            Price = 2799m,
                            ReleaseDate = new DateOnly(2024, 1, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Dyson",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A powerful cordless vacuum cleaner.",
                            DiscountedPrice = 6999m,
                            ImageUrl = "dyson_v11.jpg",
                            IsFeatured = false,
                            Name = "V11 Vacuum Cleaner",
                            OnSale = true,
                            Price = 7999m,
                            ReleaseDate = new DateOnly(2024, 2, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Brand = "KitchenAid",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A versatile mixer for all your baking needs.",
                            DiscountedPrice = 5499m,
                            ImageUrl = "kitchenaid_mixer.jpg",
                            IsFeatured = false,
                            Name = "Stand Mixer",
                            OnSale = true,
                            Price = 6999m,
                            ReleaseDate = new DateOnly(2024, 3, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Nespresso",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A convenient way to make espresso at home.",
                            DiscountedPrice = 2999m,
                            ImageUrl = "nespresso_machine.jpg",
                            IsFeatured = false,
                            Name = "Coffee Machine",
                            OnSale = true,
                            Price = 3499m,
                            ReleaseDate = new DateOnly(2024, 4, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Instant",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A multi-use pressure cooker for quick meals.",
                            DiscountedPrice = 1199m,
                            ImageUrl = "instant_pot_duo.jpg",
                            IsFeatured = false,
                            Name = "Pot Duo",
                            OnSale = true,
                            Price = 1599m,
                            ReleaseDate = new DateOnly(2024, 5, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Chanel",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A timeless fragrance for special occasions.",
                            DiscountedPrice = 1699m,
                            ImageUrl = "chanel_no_5.jpg",
                            IsFeatured = false,
                            Name = "No. 5 Perfume",
                            OnSale = true,
                            Price = 1999m,
                            ReleaseDate = new DateOnly(2024, 1, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Maybelline",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A volumizing mascara for bold lashes.",
                            DiscountedPrice = 129m,
                            ImageUrl = "maybelline_mascara.jpg",
                            IsFeatured = false,
                            Name = "Mascara",
                            OnSale = true,
                            Price = 199m,
                            ReleaseDate = new DateOnly(2024, 2, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Gucci",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A luxury handbag made from fine leather.",
                            DiscountedPrice = 13999m,
                            ImageUrl = "gucci_handbag.jpg",
                            IsFeatured = false,
                            Name = "Handbag",
                            OnSale = true,
                            Price = 15999m,
                            ReleaseDate = new DateOnly(2024, 3, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Ray-Ban",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic sunglasses with polarized lenses.",
                            DiscountedPrice = 2499m,
                            ImageUrl = "rayban_aviator.jpg",
                            IsFeatured = false,
                            Name = "Aviator Sunglasses",
                            OnSale = true,
                            Price = 2999m,
                            ReleaseDate = new DateOnly(2024, 4, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Brand = "MAC",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A long-lasting lipstick in a range of colors.",
                            DiscountedPrice = 249m,
                            ImageUrl = "mac_lipstick.jpg",
                            IsFeatured = false,
                            Name = "Lipstick",
                            OnSale = true,
                            Price = 299m,
                            ReleaseDate = new DateOnly(2024, 5, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Brand = "Yamaha",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A high-quality acoustic guitar for all levels.",
                            DiscountedPrice = 4499m,
                            ImageUrl = "yamaha_acoustic_guitar.jpg",
                            IsFeatured = false,
                            Name = "Acoustic Guitar",
                            OnSale = true,
                            Price = 4999m,
                            ReleaseDate = new DateOnly(2024, 1, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Brand = "Roland",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A digital piano with realistic touch and sound.",
                            DiscountedPrice = 17999m,
                            ImageUrl = "roland_digital_piano.jpg",
                            IsFeatured = false,
                            Name = "Digital Piano",
                            OnSale = true,
                            Price = 19999m,
                            ReleaseDate = new DateOnly(2024, 2, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Brand = "Fender",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A legendary electric guitar for professionals.",
                            DiscountedPrice = 12999m,
                            ImageUrl = "fender_stratocaster.jpg",
                            IsFeatured = false,
                            Name = "Stratocaster",
                            OnSale = true,
                            Price = 17999m,
                            ReleaseDate = new DateOnly(2024, 3, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Brand = "Zildjian",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Professional cymbals for drummers.",
                            DiscountedPrice = 4999m,
                            ImageUrl = "zildjian_cymbals.jpg",
                            IsFeatured = false,
                            Name = "Cymbals",
                            OnSale = true,
                            Price = 5999m,
                            ReleaseDate = new DateOnly(2024, 4, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Brand = "Shure",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A reliable microphone for live performances.",
                            DiscountedPrice = 1499m,
                            ImageUrl = "shure_sm58.jpg",
                            IsFeatured = false,
                            Name = "SM58 Microphone",
                            OnSale = true,
                            Price = 1999m,
                            ReleaseDate = new DateOnly(2024, 5, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            Brand = "Winsor & Newton",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-quality watercolor paints for artists.",
                            DiscountedPrice = 799m,
                            ImageUrl = "winsor_newton_watercolors.jpg",
                            IsFeatured = false,
                            Name = "Watercolors",
                            OnSale = true,
                            Price = 999m,
                            ReleaseDate = new DateOnly(2024, 1, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            Brand = "Faber-Castell",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A set of professional-grade colored pencils.",
                            DiscountedPrice = 499m,
                            ImageUrl = "faber_castell_pencils.jpg",
                            IsFeatured = false,
                            Name = "Pencils",
                            OnSale = true,
                            Price = 599m,
                            ReleaseDate = new DateOnly(2024, 2, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Brand = "Cricut",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A versatile cutting machine for crafting.",
                            DiscountedPrice = 3999m,
                            ImageUrl = "cricut_maker.jpg",
                            IsFeatured = false,
                            Name = "Maker",
                            OnSale = true,
                            Price = 4999m,
                            ReleaseDate = new DateOnly(2024, 3, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            Brand = "Sennelier",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Richly pigmented oil pastels for artists.",
                            DiscountedPrice = 1599m,
                            ImageUrl = "sennelier_oil_pastels.jpg",
                            IsFeatured = false,
                            Name = "Oil Pastels",
                            OnSale = true,
                            Price = 1999m,
                            ReleaseDate = new DateOnly(2024, 4, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            Brand = "Canson",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-quality drawing paper for all mediums.",
                            DiscountedPrice = 429m,
                            ImageUrl = "canson_drawing_paper.jpg",
                            IsFeatured = false,
                            Name = "Drawing Paper",
                            OnSale = true,
                            Price = 499m,
                            ReleaseDate = new DateOnly(2024, 5, 1),
                            Stock = 0,
                            UpdatedAt = new DateTime(2025, 7, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MvcWeb.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewComment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("MvcWeb.Models.CartItem", b =>
                {
                    b.HasOne("MvcWeb.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcWeb.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcWeb.Models.OrderItem", b =>
                {
                    b.HasOne("MvcWeb.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcWeb.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcWeb.Models.Payment", b =>
                {
                    b.HasOne("MvcWeb.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MvcWeb.Models.Product", b =>
                {
                    b.HasOne("MvcWeb.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MvcWeb.Models.Review", b =>
                {
                    b.HasOne("MvcWeb.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcWeb.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("MvcWeb.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MvcWeb.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("MvcWeb.Models.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
